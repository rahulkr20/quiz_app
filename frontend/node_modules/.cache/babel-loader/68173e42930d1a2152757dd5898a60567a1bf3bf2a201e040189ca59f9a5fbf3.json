{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\CapstoneGit\\\\frontend\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  question: 'Which of the following is a primary function of an Intrusion Detection System (IDS)?',\n  options: ['Data encryption', 'Network segmentation', 'Malware removal', 'Monitoring and analyzing network traffic'],\n  correctAnswer: 'Monitoring and analyzing network traffic'\n}, {\n  question: 'Which type of Intrusion Detection System (IDS) operates by comparing current system activity to a predefined profile of normal behavior?',\n  options: ['Signature-based', 'Anomaly-based', 'Hybrid-based', 'Behavior-based'],\n  correctAnswer: 'Anomaly-based'\n}, {\n  question: 'What does a Signature-based Intrusion Detection System (IDS) rely on for identifying malicious activities?',\n  options: ['Statistical analysis', 'User behavior', ' Known patterns or signatures', 'Anomaly detection'],\n  correctAnswer: 'Known patterns or signatures'\n}, {\n  question: 'Which of the following is a limitation of Anomaly-based Intrusion Detection Systems (IDS)?',\n  options: ['High false positive rate', 'Slow response to new threats', 'Inability to detect known attacks', ' Dependence on signature updates'],\n  correctAnswer: 'High false positive rate'\n}, {\n  question: 'What is the role of a Network-based Intrusion Detection System (NIDS) in a cybersecurity infrastructure?',\n  options: [' Protecting endpoints', 'Monitoring network traffic', 'Scanning for malware', 'Encrypting data'],\n  correctAnswer: 'Monitoring network traffic'\n}, {\n  question: 'Which type of Intrusion Detection System (IDS) is known for its ability to detect previously unknown threats?',\n  options: ['Signature-based', 'Anomaly-based', 'Heuristic-based', 'Behavior-based'],\n  correctAnswer: 'Heuristic-based'\n}\n\n// Add more questions and options\n];\n\nfunction Quiz() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const handleAnswerClick = selectedOption => {\n    if (selectedOption === questions[currentQuestion].correctAnswer) {\n      setScore(score + 1);\n    }\n    if (currentQuestion + 1 < questions.length) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setShowResult(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showResult ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold\",\n        children: \"Quiz Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg mt-4\",\n        children: [\"Your score: \", score, \" out of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold\",\n        children: questions[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-gray-200 hover:bg-gray-300 rounded p-2 m-2\",\n          onClick: () => handleAnswerClick(option),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"sRLcFc/VuPYlWy6a4j9x1fWv1QA=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","questions","question","options","correctAnswer","Quiz","_s","currentQuestion","setCurrentQuestion","score","setScore","showResult","setShowResult","handleAnswerClick","selectedOption","length","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/CapstoneGit/frontend/src/components/Quiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst questions = [\r\n  {\r\n    question: 'Which of the following is a primary function of an Intrusion Detection System (IDS)?',\r\n    options: ['Data encryption', 'Network segmentation','Malware removal','Monitoring and analyzing network traffic'],\r\n    correctAnswer: 'Monitoring and analyzing network traffic',\r\n  },\r\n  {\r\n    question: 'Which type of Intrusion Detection System (IDS) operates by comparing current system activity to a predefined profile of normal behavior?',\r\n    options: ['Signature-based','Anomaly-based','Hybrid-based','Behavior-based'],\r\n    correctAnswer: 'Anomaly-based',\r\n  },\r\n  {\r\n    question: 'What does a Signature-based Intrusion Detection System (IDS) rely on for identifying malicious activities?',  \r\n    options: ['Statistical analysis','User behavior',' Known patterns or signatures','Anomaly detection'],\r\n    correctAnswer: 'Known patterns or signatures',\r\n  },\r\n  {\r\n    question: 'Which of the following is a limitation of Anomaly-based Intrusion Detection Systems (IDS)?',\r\n    options: ['High false positive rate','Slow response to new threats','Inability to detect known attacks',' Dependence on signature updates'],\r\n    correctAnswer: 'High false positive rate',\r\n  },\r\n  {\r\n    question: 'What is the role of a Network-based Intrusion Detection System (NIDS) in a cybersecurity infrastructure?',\r\n    options: [' Protecting endpoints','Monitoring network traffic','Scanning for malware','Encrypting data'],\r\n    correctAnswer: 'Monitoring network traffic',\r\n  },\r\n  {\r\n    question: 'Which type of Intrusion Detection System (IDS) is known for its ability to detect previously unknown threats?',\r\n    options: ['Signature-based','Anomaly-based','Heuristic-based','Behavior-based'],\r\n    correctAnswer: 'Heuristic-based',\r\n  },\r\n  \r\n\r\n  // Add more questions and options\r\n];\r\n\r\nfunction Quiz() {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  const handleAnswerClick = (selectedOption) => {\r\n    if (selectedOption === questions[currentQuestion].correctAnswer) {\r\n      setScore(score + 1);\r\n    }\r\n\r\n    if (currentQuestion + 1 < questions.length) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    } else {\r\n      setShowResult(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    {showResult ? (\r\n      <div className=\"text-center\">\r\n        <h2 className=\"text-2xl font-bold\">Quiz Results</h2>\r\n        <p className=\"text-lg mt-4\">Your score: {score} out of {questions.length}</p>\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <h2 className=\"text-2xl font-bold\">{questions[currentQuestion].question}</h2>\r\n        <div className=\"mt-4\">\r\n          {questions[currentQuestion].options.map((option, index) => (\r\n            <button\r\n              key={index}\r\n              className=\"bg-gray-200 hover:bg-gray-300 rounded p-2 m-2\"\r\n              onClick={() => handleAnswerClick(option)}\r\n            >\r\n              {option}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n}\r\n\r\nexport default Quiz;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}